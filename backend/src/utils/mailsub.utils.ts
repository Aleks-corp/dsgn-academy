import nodemailer from "nodemailer";
import type { SentMessageInfo } from "nodemailer";
import "dotenv/config";

import { SMTP } from "../constants/mail.constant.js";
import { HttpError } from "./index.js";

const { EMAIL_REPORT_SEND, EMAIL_SEND_FROM, EMAIL_PASS } = process.env;

interface Mail {
  email: string;
  reason?: string;
  mode?: string;
}

const sendMailSub = async ({
  email,
  reason,
  mode,
}: Mail): Promise<SentMessageInfo> => {
  if (!EMAIL_REPORT_SEND || !EMAIL_PASS || !EMAIL_SEND_FROM) {
    throw HttpError(500, "Mail Server Error");
  }

  const transporter = nodemailer.createTransport({
    host: SMTP.HOST,
    port: SMTP.PORT,
    secure: true,
    auth: {
      user: EMAIL_SEND_FROM,
      pass: EMAIL_PASS,
    },
  });

  const isUnsub = Boolean(reason);

  const subject = isUnsub
    ? `üîî –í—ñ–¥–ø–∏—Å–∫–∞ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${email}`
    : `‚úÖ –ù–æ–≤–∞ –ø—ñ–¥–ø–∏—Å–∫–∞ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ ${email}`;

  const text = isUnsub
    ? `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${email} –≤—ñ–¥–ø–∏—Å–∞–≤—Å—è –≤—ñ–¥ –ø—ñ–¥–ø–∏—Å–∫–∏.\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`
    : `–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${email} —â–æ–π–Ω–æ –æ—Ñ–æ—Ä–º–∏–≤ "${
        mode ? (mode === "monthly" ? "–º—ñ—Å—è—á–Ω—É" : "—Ä—ñ—á–Ω—É") : ""
      }" –ø—ñ–¥–ø–∏—Å–∫—É!`;

  const html = isUnsub
    ? `
      <h2>–í—ñ–¥–ø–∏—Å–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</h2>
      <p><b>Email:</b> ${email}</p>
      <p><b>–ü—Ä–∏—á–∏–Ω–∞:</b> ${reason}</p>
      <hr/>
      <small>–¶–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ dsgn.academy</small>
    `
    : `
      <h2>–ù–æ–≤–∞ –ø—ñ–¥–ø–∏—Å–∫–∞ üéâ</h2>
      <p><b>Email:</b> ${email}</p>
      <p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–≤ –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ dsgn.academy.</p>
      <hr/>
      <small>–¶–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ dsgn.academy</small>
    `;
  return await transporter.sendMail({
    from: `"DSGN Academy" <${EMAIL_SEND_FROM}>`,
    to: EMAIL_REPORT_SEND,
    subject,
    text,
    html,
  });
};

export default sendMailSub;
