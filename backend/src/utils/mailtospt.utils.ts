import nodemailer from "nodemailer";
import type { SentMessageInfo } from "nodemailer";
import "dotenv/config";

import { SMTP } from "../constants/mail.constant.js";
import type { IUser } from "../types/user.type.js";
import { HttpError } from "./index.js";

const { EMAIL_REPORT_SEND, EMAIL_SEND_FROM, EMAIL_PASS } = process.env;

interface IMail {
  user: IUser;
  report?: string;
}

const sendMailToSprt = async ({
  user,
  report,
}: IMail): Promise<SentMessageInfo> => {
  if (!EMAIL_REPORT_SEND || !EMAIL_PASS || !EMAIL_SEND_FROM) {
    throw HttpError(500, "Mail Server Error");
  }

  const transporter = nodemailer.createTransport({
    host: SMTP.HOST,
    port: SMTP.PORT,
    secure: true,
    auth: {
      user: EMAIL_SEND_FROM,
      pass: EMAIL_PASS,
    },
  });

  const subject = report
    ? `üêû Report –≤—ñ–¥ ${user.email}`
    : `üßæ –ó–∞–ø–∏—Ç –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –æ–ø–ª–∞—Ç–∏ –≤—ñ–¥ ${user.email}`;

  let html: string;

  if (report) {
    // –Ø–∫—â–æ —Ü–µ —Ä–µ–ø–æ—Ä—Ç
    html = `
      <h2>–û—Ç—Ä–∏–º–∞–Ω–æ —Ä–µ–ø–æ—Ä—Ç –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞</h2>
      <table border="1" cellspacing="0" cellpadding="6" style="border-collapse:collapse;">
        <tr><td><b>–Ü–º‚Äô—è</b></td><td>${user.name}</td></tr>
        <tr><td><b>Email</b></td><td>${user.email}</td></tr>
        ${
          user.phone
            ? `<tr><td><b>–¢–µ–ª–µ—Ñ–æ–Ω</b></td><td>${user.phone}</td></tr>`
            : ""
        }
        <tr><td><b>–ü—ñ–¥–ø–∏—Å–∫–∞</b></td><td>${user.subscription}</td></tr>
        <tr><td><b>Order Ref</b></td><td>${user.orderReference}</td></tr>
        ${
          user.status
            ? `<tr><td><b>–°—Ç–∞—Ç—É—Å –ø—ñ–¥–ø–∏—Å–∫–∏</b></td><td>${user.status}</td></tr>`
            : ""
        }
        ${
          user.lastPayedStatus
            ? `<tr><td><b>–°—Ç–∞—Ç—É—Å –æ—Å—Ç–∞–Ω—å–æ—ó –æ–ø–ª–∞—Ç–∏</b></td><td>${user.lastPayedStatus}</td></tr>`
            : ""
        }
      </table>
      <h3>–¢–µ–∫—Å—Ç —Ä–µ–ø–æ—Ä—Ç—É:</h3>
      <p>${report}</p>
      <hr/>
      <small>–¶–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ dsgn.academy</small>
    `;
  } else {
    // –Ø–∫—â–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–ø–ª–∞—Ç–∏
    html = `
      <h2>–ó–∞–ø–∏—Ç –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –æ–ø–ª–∞—Ç–∏</h2>
      <table border="1" cellspacing="0" cellpadding="6" style="border-collapse:collapse;">
        <tr><td><b>–Ü–º‚Äô—è</b></td><td>${user.name}</td></tr>
        <tr><td><b>Email</b></td><td>${user.email}</td></tr>
        ${
          user.phone
            ? `<tr><td><b>–¢–µ–ª–µ—Ñ–æ–Ω</b></td><td>${user.phone}</td></tr>`
            : ""
        }
        <tr><td><b>–ü—ñ–¥–ø–∏—Å–∫–∞</b></td><td>${user.subscription}</td></tr>
        ${
          user.status
            ? `<tr><td><b>–°—Ç–∞—Ç—É—Å –ø—ñ–¥–ø–∏—Å–∫–∏</b></td><td>${user.status}</td></tr>`
            : ""
        }
        ${
          user.amount
            ? `<tr><td><b>–°—É–º–∞ –æ–ø–ª–∞—Ç–∏</b></td><td>${user.amount} ‚Ç¨</td></tr>`
            : ""
        }
        ${
          user.mode
            ? `<tr><td><b>–ü–µ—Ä—ñ–æ–¥</b></td><td>${user.mode}</td></tr>`
            : ""
        }
        ${
          user.lastPayedStatus
            ? `<tr><td><b>–°—Ç–∞—Ç—É—Å –æ—Å—Ç–∞–Ω—å–æ—ó –æ–ø–ª–∞—Ç–∏</b></td><td>${user.lastPayedStatus}</td></tr>`
            : ""
        }
        ${
          user.lastPayedDate
            ? `<tr><td><b>–î–∞—Ç–∞ –æ—Å—Ç–∞–Ω—å–æ—ó –æ–ø–ª–∞—Ç–∏</b></td><td>${new Date(
                user.lastPayedDate
              ).toLocaleDateString("uk-UA")}</td></tr>`
            : ""
        }
        <tr><td><b>–î–∞—Ç–∞ –ø–æ—á–∞—Ç–∫—É</b></td><td>${new Date(
          user.substart
        ).toLocaleDateString("uk-UA")}</td></tr>
        <tr><td><b>–î–∞—Ç–∞ –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è</b></td><td>${new Date(
          user.subend
        ).toLocaleDateString("uk-UA")}</td></tr>
        <tr><td><b>Order Ref</b></td><td>${user.orderReference}</td></tr>
      </table>
      <hr/>
      <small>–¶–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ dsgn.academy</small>
    `;
  }

  return await transporter.sendMail({
    from: `"DSGN Academy" <${EMAIL_SEND_FROM}>`,
    to: EMAIL_REPORT_SEND,
    subject,
    html,
  });
};

export default sendMailToSprt;
