"use client";

import { withUserGuard } from "@/guards/WithUserGuard";
import { unsubscribe } from "@/redux/auth/auth.thunk";
import { useAppDispatch } from "@/redux/hooks";
import { useState } from "react";
import Button from "@/components/buttons/Button";
import toast from "react-hot-toast";
import { useRouter } from "next/navigation";
import MaskIcon from "@/components/MaskIcon";

const reasons = [
  "–Ø —Ä—ñ–¥–∫–æ –∫–æ—Ä–∏—Å—Ç—É—é—Å—è —Å–µ—Ä–≤—ñ—Å–æ–º",
  "–ù–µ –∑–Ω–∞–π—à–æ–≤(–ª–∞) —Ç–µ, —â–æ –º–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ",
  "–¶—ñ–Ω–∞ –∑–∞–≤–∏—Å–æ–∫–∞",
  "–¢–µ—Ö–Ω—ñ—á–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏ / –Ω–µ–∑—Ä—É—á–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
  "–Ø –ø—ñ–¥–ø–∏—Å–∞–≤—Å—è(–ª–∞—Å—å) –≤–∏–ø–∞–¥–∫–æ–≤–æ",
];

function UnsubscribePage() {
  const dispatch = useAppDispatch();
  const router = useRouter();
  const [selected, setSelected] = useState<string | null>(null);
  const [feedback, setFeedback] = useState("");

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    const reason = `–ü—Ä–∏—á–∏–Ω–∞: ${selected}. \n –í—ñ–¥–≥—É–∫: ${feedback}`;
    try {
      const res = await dispatch(unsubscribe(reason));
      if (res.meta && res.meta.requestStatus === "fulfilled") {
        if (res.payload.message === "–£—Å–ø—ñ—à–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è") {
          toast.success(res.payload.message, { duration: 4000 });
          router.push("/profile/unsubscribe/success");
        } else {
          toast.error(res.payload.message, { duration: 4000 });
        }
        console.log("üöÄ ~ res:", res.payload);
      }
    } catch (error) {
      console.log("üöÄ ~ error:", error);
    }
  };
  return (
    <div className="w-full flex flex-col">
      <div className="flex flex-col gap-4 w-full max-w-md mx-auto lg:mx-0">
        <h2 className="font-inter text-xl text-foreground font-medium leading-7 tracking-thinest">
          –ú–∏ –±—É–¥–µ–º–æ —Å—É–º—É–≤–∞—Ç–∏, —â–æ –≤–∏ –π–¥–µ—Ç–µ üíî
        </h2>
        <p className="font-inter text-muted text-xs font-medium leading-4 tracking-thin">
          –ù–∞–º –¥—É–∂–µ —à–∫–æ–¥–∞, —â–æ –≤–∏ –≤–∏—Ä—ñ—à–∏–ª–∏ –≤—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è. Design Academy —Å—Ç–≤–æ—Ä–µ–Ω–∞,
          —â–æ–± –¥–æ–ø–æ–º–∞–≥–∞—Ç–∏ —ñ –Ω–∞–¥–∏—Ö–∞—Ç–∏. –ú–∏ –ø–æ—Å—Ç—ñ–π–Ω–æ –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ —Ç–∏–º, —â–æ–± —Å—Ç–∞–≤–∞—Ç–∏
          –∫—Ä–∞—â–∏–º–∏ –¥–ª—è –≤–∞—Å.
          <span className="block font-bold">
            –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –ø—Ä–∏—á–∏–Ω–æ—é ‚Äî –≤–∞—à–∞ –¥—É–º–∫–∞ –¥–ª—è –Ω–∞—Å –¥—É–∂–µ –≤–∞–∂–ª–∏–≤–∞ üôè
          </span>
        </p>
        <form onSubmit={handleSubmit} className="flex flex-col w-full gap-2.5">
          <div className="flex flex-col">
            {reasons.map((reason) => (
              <label
                key={reason}
                className="flex p-1.5 items-center justify-between select-none hover:bg-muted-background cursor-pointer"
              >
                <span className="text-xs text-foreground font-medium font-inter leading-4 tracking-thin">
                  {reason}
                </span>
                <input
                  type="radio"
                  name="unsubscribe-reason"
                  value={reason}
                  checked={selected === reason}
                  onChange={() => setSelected(reason)}
                  className="hidden"
                />
                <div
                  className={`w-5 h-5 flex items-center justify-center rounded-md bg-muted-background shadow-select`}
                >
                  {selected === reason && (
                    <MaskIcon
                      src="icons/nav-icons/check.svg"
                      className={`w-4 h-4 text-muted transition-opacity duration-200 ${
                        selected === reason ? "opacity-100" : "opacity-0"
                      }`}
                    />
                  )}
                </div>
              </label>
            ))}
          </div>
          <p className="text-xs text-foreground font-medium font-inter leading-4 tracking-thin">
            –ó–∞–ª–∏—à–∏—Ç–∏ —Å–≤—ñ–π –≤—ñ–¥–≥—É–∫:
          </p>
          <div className="flex flex-col gap-2">
            <textarea
              value={feedback}
              onChange={(e) => setFeedback(e.target.value)}
              className="w-full min-h-[106px] rounded-xl border border-[#E2E2E2] p-3 pr-4 text-xs bg-icon-bg placeholder:text-muted-text placeholder:text-[11px] placeholder:font-medium placeholder:leading-4 placeholder:tracking-thin focus:outline-none"
              placeholder="–ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è —Å–≤–æ—ó–º–∏ –¥—É–º–∫–∞–º–∏ —á–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è–º–∏ ‚Äî –Ω–∞–º –¥—É–∂–µ –¥–æ–ø–æ–º–æ–∂–µ –≤–∞—à–∞ —â–∏—Ä—ñ—Å—Ç—å."
            />
          </div>
          <Button
            type="submit"
            text="–°–∫–∞—Å—É–≤–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É"
            disabled={!selected}
            style="accent"
            className="w-fit"
          />
        </form>
      </div>
    </div>
  );
}
export default withUserGuard(UnsubscribePage);
